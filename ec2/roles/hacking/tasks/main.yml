---
# tasks file for hacking

# 
- name: get user home directory
  shell: >
    getent passwd `whoami` | awk -F: '{ print $6 }'
  changed_when: false
  register: user_home

- name: Make a directory for source checkout
  file:
    path: "{{ user_home.stdout }}/src"
    state: directory

- name: Make a directory for 'hacking'
  file:
    path: "{{ user_home.stdout }}/src/hacking"
    state: directory

- name: Make a directory for ~/go/bin
  file:
    path: "{{ user_home.stdout }}/go/bin"
    state: directory

- name: Make a directory for ~/go/pkg
  file:
    path: "{{ user_home.stdout }}/go/pkg"
    state: directory

- name: Ensure GOPATH is set in ~/.bashrc
  ansible.builtin.lineinfile:
    path: "{{ user_home.stdout }}/.bashrc"
    regexp: '^export GOPATH='
    line: "export GOPATH=${HOME}/go"

- name: Install/Upgrade misc packages
  dnf:
    name: "{{ item }}"
    state: latest
  with_items:
    - vim
    - git  
    - jq
    - tree
    - make
    - golang
    - gcc
  become: yes

- git:
    repo: 'https://github.com/konveyor/tackle2-hub.git'
    dest: "{{ user_home.stdout }}/src/konveyor/tackle2-hub"

- git:
    repo: 'https://github.com/konveyor/tackle2-operator.git'
    dest: "{{ user_home.stdout }}/src/konveyor/tackle2-operator"

- git:
    repo: 'https://github.com/konveyor/tackle2-addon.git'
    dest: "{{ user_home.stdout }}/src/konveyor/tackle2-addons"

- name: Copy hacking files over
  copy:
    src: "{{ item }}"
    dest: "{{ user_home.stdout }}/src/hacking/{{ item }}"
    mode: "0755"
  with_items:
    - "minikube_start.sh"
    - "podman_machine_start.sh"
    - "tackle2-install.sh"


#- file:
#    src: "{{ item.path }}"
#    dest: "{{ item.dest }}"
#    state: link
#  with_items:
#    - { path: "{{ user_home.stdout }}/src/crane/hack/minikube-clusters-start.sh", dest: "{{ user_home.stdout }}/minikube-clusters-start.sh" }
#    - { path: "{{ user_home.stdout }}/src/crane/hack/minikube-clusters-delete.sh", dest: "{{ user_home.stdout }}/minikube-clusters-delete.sh" }

#- name: Run minikube-clusters-start.sh
#  command: "./minikube-clusters-start.sh"
#  args:
#    chdir: "{{ user_home.stdout }}"
#    creates: "{{ user_home.stdout }}/.minikube/profiles/src/config.json"

